<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:xtck="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:converters="clr-namespace:PQM_V2.Converters">
    <Style x:Key="expander" TargetType="{x:Type Expander}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="20" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Expander}}"
                               Text="{Binding}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#808080"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ExpandDirection" Value="Down"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="indentedExpander" TargetType="{x:Type Expander}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="18" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Expander}}"
                               Text="{Binding}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#808080"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ExpandDirection" Value="Down"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="20, 0, 0, 0"/>
    </Style>
    <Style x:Key="headerSP" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0, 15, 0, 10"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="attribSP" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0, 5, 0, 5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>
    <Style x:Key="headerTextBlockLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0, 0, 10, 0"/>
    </Style>
    <Style x:Key="attribTextBlockLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0, 0, 10, 0"/>
    </Style>
    <Style x:Key="attribTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Background" Value="White"/>
    </Style>
    <Style x:Key="updateButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="#BB8FCE"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0, 10, 0, 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border CornerRadius="10"
                                Background="{Binding Path=Background, 
                                    RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D2B4DE"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="colorPicker" TargetType="{x:Type xtck:ColorPicker}">
        <Setter Property="Width" Value="100"/>
    </Style>

    <Style x:Key="errorMessage" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFB3B3"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="checkbox" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="white"/>
        <Setter Property="Margin" Value="10, 0,0 ,0"/>
    </Style>

    <Style x:Key="probeButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="#D0E4F1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0, 10, 0, 10"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#C4C4C4"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="comboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Width" Value="150"/>
    </Style>

    <converters:BooleanVisibilityConverter x:Key="booleanVisibilityConverter"/>
</ResourceDictionary>